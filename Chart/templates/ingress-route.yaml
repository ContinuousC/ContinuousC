################################################################################
# Copyright ContinuousC. Licensed under the "Elastic License 2.0".             #
################################################################################

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: continuousc
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/grafana(?:/.*)?$`)"
      priority: 5
      services:
        - name: grafana
          port: 80
      middlewares:
        - name: "auth-check-redirect-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/prometheus/api/v1/(?:query|query_range|query_exemplars|series|labels|label/[^/]+/values|metadata|status/buildinfo)?$`)"
      priority: 10
      services:
        - name: cortex-query-frontend
          namespace: cortex
          port: 8080
      middlewares:
        - name: "auth-check-no-redirect-viewer-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
        - name: prom-api-replace
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/prometheus/api/v1/(?:rules|alerts)?$`)"
      priority: 10
      services:
        - name: cortex-ruler
          namespace: cortex
          port: 8080
      middlewares:
        - name: "auth-check-no-redirect-viewer-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
        - name: prom-api-replace
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/prometheus(?:/.*)?$`)"
      priority: 5
      services:
        - name: prometheus-server
          port: 80
      middlewares:
        - name: "auth-check-redirect-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/opensearch(?:/.*)?$`)"
      priority: 5
      services:
        - name: opensearch-dashboards
          port: http
      middlewares:
        - name: "auth-check-redirect-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/jaeger(?:/.*)?$`)"
      priority: 5
      services:
        - name: jaeger-query
          port: 80
      middlewares:
        - name: "auth-check-redirect-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/api/prom(?:/.*)?$`)"
      priority: 10
      services:
        - name: cortex-query-frontend
          namespace: cortex
          port: 8080
      middlewares:
        - name: "auth-check-no-redirect-viewer-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/v1/traces(?:/.*)?$`)"
      priority: 5
      services:
        - name: opentelemetry-collector
          port: 4318
      middlewares:
        - name: "auth-check-no-redirect-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/api/v1/push$`)"
      priority: 15
      middlewares:
        - name: "auth-check-no-redirect-bearer-editor-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
      services:
        - name: cortex-distributor
          namespace: cortex
          port: 8080
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/api(?:/.*)?$`)"
      priority: 5
      services:
        - name: relation-graph-engine
          port: 80
          scheme: h2c
      middlewares:
        - name: cors-domains
        - name: "auth-check-no-redirect-either-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && PathRegexp(`^/api/jaeger-anomaly-detection(?:/.*)?$`)"
      priority: 10
      services:
        - name: jaeger-anomaly-detection
          port: 80
      middlewares:
        - name: "auth-check-no-redirect-viewer-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && ( Path(`/user-info`) || Path(`/auth/logout`) )"
      priority: 5
      services:
        - name: oidc-client
          port: 8080
          namespace: "{{ .Values.continuousc.auth.namespace }}"
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`) && ( PathRegexp(`^/favicon(?:\\.ico|/.*)$`) || Path(`/site.webmanifest`) || Path(`/browserconfig.xml`) || Path(`/error/auth-server-down`))"
      priority: 5
      services:
        - name: frontend
          port: 8080
    - kind: Rule
      match: "Host(`{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}`)"
      priority: 1
      services:
        - name: frontend
          port: 8080
      middlewares:
        - name: cors-domains
        - name: "auth-check-redirect-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
          namespace: "{{ .Values.continuousc.auth.namespace }}"
        - name: redirect-account
        - name: redirect-docs
  tls:
    domains:
      - main: "{{  .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: cors-domains
spec:
  headers:
    accessControlAllowMethods:
      - GET
      - OPTIONS
      - PUT
      - POST
      - DELETE
    accessControlAllowOriginList:
      - https://frontstage.contc
      - https://{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}
      - https://{{ .Values.continuousc.sso.subDomain }}.{{ .Values.continuousc.domain }}
    customResponseHeaders:
      Access-Control-Allow-Origin: "https://frontstage.contc"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-redirect-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
    addAuthCookiesToResponse:
      - "identity_access"
      - "identity_id"
      - "identity_refresh"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&noRedirect=true"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-viewer-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&noRedirect=true&requireRole=viewer"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-editor-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&noRedirect=true&requireRole=editor"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-admin-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&noRedirect=true&requireRole=admin"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-bearer-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&tokenSource=bearer&noRedirect=true"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-bearer-viewer-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&tokenSource=bearer&noRedirect=true&requireRole=viewer"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-bearer-editor-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&tokenSource=bearer&noRedirect=true&requireRole=editor"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-bearer-admin-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&tokenSource=bearer&noRedirect=true&requireRole=admin"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-either-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&tokenSource=either&noRedirect=true"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-either-viewer-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&tokenSource=either&noRedirect=true&requireRole=viewer"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-either-editor-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&tokenSource=either&noRedirect=true&requireRole=editor"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "auth-check-no-redirect-either-admin-{{ .Values.continuousc.tenant }}-{{ .Values.continuousc.auth.subDomain }}"
  namespace: "{{ .Values.continuousc.auth.namespace }}"
spec:
  forwardAuth:
    address: "http://oidc-client.{{ .Values.continuousc.auth.namespace }}.svc.cluster.local:8080/auth/check?tenant={{ urlquery .Values.continuousc.tenant }}&tokenSource=either&noRedirect=true&requireRole=admin"
    trustForwardHeader: true
    authResponseHeaders:
      - "X-PROXY-USER"
      - "X-PROXY-NAME"
      - "X-PROXY-ROLE"
      - "X-PROXY-GRAFANA-ROLE"
      - "X-PROXY-EMAIL"
      - "X-Scope-OrgID"
      - "X-OIDC-LOGOUT"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: redirect-account
spec:
  redirectRegex:
    permanent: true
    regex: https://{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}/profile
    replacement: "https://{{ .Values.continuousc.sso.subDomain }}.{{ .Values.continuousc.domain }}/realms/{{ .Values.continuousc.sso.realm }}/portal"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: redirect-docs
spec:
  redirectRegex:
    permanent: true
    regex: https://{{ .Values.continuousc.tenant }}.{{ .Values.continuousc.auth.subDomain }}.{{ .Values.continuousc.domain }}/documentation
    replacement: https://{{ .Values.continuousc.documentationSubDomain }}.{{ .Values.continuousc.domain }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: prom-api-replace
spec:
  replacePathRegex:
    regex: ^/prometheus/(.*)
    replacement: /api/prom/$1
