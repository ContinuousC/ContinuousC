# useExternalConfig: true
# externalConfigSecretName: "cortex-config"
# externalConfigVersion: "thirty"
nginx:
  config:
    dnsResolver: "coredns.kube-system.svc.cluster.local"
config:
  auth_enabled: true
  api:
    response_compression_enabled: true
  alertmanager:
    enable_api: true
  ruler:
    enable_api: true
  frontend:
    log_queries_longer_than: 1s
    # compress_responses: true
  querier:
    timeout: "30s"
    max_samples: 1000000
  query_range:
    # split_queries_by_interval: 24h
    # align_queries_with_step: true
    # cache_results: true
    results_cache:
      cache:
        memcached_client:
          timeout: "10s"
  blocks_storage:
    backend: "s3"
    s3:
      endpoint: "minio.cortex:443"
      bucket_name: "cortex"
      access_key_id: "cortex"
      secret_access_key: "GCEC6Mw8DrkJpqaIeGeMmlcAVBlleavQ8X5cyNu9dMxo4A30FpbsZLZjLjYBtemC"
      http:
        insecure_skip_verify: true
    bucket_store:
      index_cache:
        memcached:
          timeout: "10s"
      chunks_cache:
        memcached:
          timeout: "10s"
      metadata_cache:
        memcached:
          timeout: "10s"
  alertmanager_storage:
    backend: "s3"
    s3:
      endpoint: "minio.cortex:443"
      bucket_name: "alertmanager"
      access_key_id: "cortex"
      secret_access_key: "GCEC6Mw8DrkJpqaIeGeMmlcAVBlleavQ8X5cyNu9dMxo4A30FpbsZLZjLjYBtemC"
      http:
        insecure_skip_verify: true
    # backend: local
    # local:
    #   path: /data
  ruler_storage:
    backend: "s3"
    s3:
      endpoint: "minio.cortex:443"
      bucket_name: "ruler"
      access_key_id: "cortex"
      secret_access_key: "GCEC6Mw8DrkJpqaIeGeMmlcAVBlleavQ8X5cyNu9dMxo4A30FpbsZLZjLjYBtemC"
      http:
        insecure_skip_verify: true
    # backend: local
    # local:
    #   directory: /data/rules
  server:
    grpc_server_max_recv_msg_size: 52428800
    grpc_server_max_send_msg_size: 52428800
  ingester_client:
    grpc_client_config:
      max_recv_msg_size: 52428800
      max_send_msg_size: 52428800
runtimeconfigmap:
  runtime_config:
    ingester_limits:
      max_ingestion_rate: 1000000
    overrides:
      fake:
        ingestion_rate: 1000000
        max_series_per_metric: 200000
      mdp-demo:
        ingestion_rate: 1000000
        max_series_per_metric: 200000
      abo-demo:
        ingestion_rate: 1000000
        max_series_per_metric: 200000
      demo:
        ingestion_rate: 1000000
        max_series_per_metric: 200000
ingester:
  extraArgs:
    # log.level: debug
    tracing.type: otel
    tracing.otel.otlp-endpoint: opentelemetry-collector.continuousc-demo:4317
    tracing.otel.sample-ratio: 0.001
  resources:
    requests:
      memory: 2G
      cpu: 0.3
    limits:
      memory: 15G
  statefulSet:
    enabled: true
  # serviceMonitor:
  #   enabled: true
ruler:
  extraArgs:
    # log.level: debug
    tracing.type: otel
    tracing.otel.otlp-endpoint: opentelemetry-collector.continuousc-demo:4317
    tracing.otel.sample-ratio: 0.001
  sidecar:
    enabled: true
    image:
      tag: 1.24.4
    searchNamespace: monitoring
    label: prometheus-name
    labelValue: monitoring-kube-prometheus-prometheus
    defaultFolderName: fake
  # serviceMonitor:
  #   enabled: true
alertmanager:
  extraArgs:
    # log.level: debug
    tracing.type: otel
    tracing.otel.otlp-endpoint: opentelemetry-collector.continuousc-demo:4317
    tracing.otel.sample-ratio: 0.001
  statefulSet:
    enabled: true
  # serviceMonitor:
  #   enabled: true
  extraVolumes:
    - name: tmp
      emptyDir: {}
  extraVolumeMounts:
    - name: tmp
      mountPath: /tmp
distributor:
  extraArgs:
    # log.level: debug
    tracing.type: otel
    tracing.otel.otlp-endpoint: opentelemetry-collector.continuousc-demo:4317
    tracing.otel.sample-ratio: 0.001
  resources:
    requests:
      memory: 2G
      cpu: 0.3
    limits:
      memory: 5G
  # serviceMonitor:
  #   enabled: true
store_gateway:
  resources:
    requests:
      memory: 2G
      cpu: 0.3
    limits:
      memory: 5G
querier:
  extraArgs:
    api.build-info-enabled: true
    experimental.alertmanager.enable-api: true
    experimental.ruler.enable-api: true
    tracing.type: otel
    tracing.otel.otlp-endpoint: opentelemetry-collector.continuousc-demo:4317
    tracing.otel.sample-ratio: 0.001
  resources:
    requests:
      memory: 2G
      cpu: 0.3
    limits:
      memory: 5G
query_frontend:
  extraArgs:
    api.build-info-enabled: true
    experimental.alertmanager.enable-api: true
    experimental.ruler.enable-api: true
    tracing.type: otel
    tracing.otel.otlp-endpoint: opentelemetry-collector.continuousc-demo:4317
    tracing.otel.sample-ratio: 0.001

memcached-frontend:
  enabled: true
memcached-blocks-index:
  enabled: true
memcached-blocks-metadata:
  enabled: true
memcached-blocks:
  enabled: true
